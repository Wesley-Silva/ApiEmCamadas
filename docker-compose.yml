version: '3.8'

services:
  # Banco de dados SQL Server
  database:
    image: wesleydevsilva/demo-sql:latest
    container_name: demo-sql-server
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
      - SA_PASSWORD=YourStrong@Passw0rd
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong@Passw0rd", "-C", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Aplicação ASP.NET Core
  webapp:
    image: wesleydevsilva/webapp-demo:latest
    container_name: demo-webapp
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      # String de conexão apontando para o container do banco
      - ConnectionStrings__DefaultConnection=Server=database,1433;Database=ApiTresCamadasMvc;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

# Volumes para persistir dados do SQL Server
volumes:
  sqlserver_data:
    driver: local

# Network para comunicação entre containers
networks:
  app-network:
    driver: bridge